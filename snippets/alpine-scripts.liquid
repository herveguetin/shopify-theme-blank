<script>
  document.addEventListener('alpine:init', () => {
    // Components
    Alpine.data('addToCart', (usedProduct = {}) => {
      return {
        product: usedProduct,
        isLoading: false,
        addProductToCart() {
          this.isLoading = true;
          fetch(window.Shopify.routes.root + 'cart/add.js', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              items: [
                {
                  id: this.product.variants[0].id,
                  quantity: 1,
                },
              ],
            }),
          })
            .then((response) => response.json())
            .then((itemLines) => {
              this.isLoading = false;
              const addedItem = itemLines.items[0];
              this.$store.cart.addItemLine(addedItem);
              this.$dispatch('cart:item-added', { item: addedItem });
            });
        },
      };
    });

    // Stores
    Alpine.store('cart', {
      itemLines: Alpine.$persist([]).as('cart_lines'),
      init() {
        fetch(window.Shopify.routes.root + 'cart.js')
          .then((response) => response.json())
          .then((cart) => {
            this.itemLines = cart.items;
          });
      },
      addItemLine(newItemLine) {
        // Update current lines in order to avoid changing order of items
        let lines = this.itemLines.map((itemLine) => (itemLine.id === newItemLine.id ? newItemLine : itemLine));

        // Add new item if not exist
        const newItemAlreadyInCart = lines.find((itemLine) => itemLine.id === newItemLine.id);
        if (newItemAlreadyInCart === undefined) {
          lines.push(newItemLine);
        }

        this.itemLines = lines;
      },
    });
  });
</script>
